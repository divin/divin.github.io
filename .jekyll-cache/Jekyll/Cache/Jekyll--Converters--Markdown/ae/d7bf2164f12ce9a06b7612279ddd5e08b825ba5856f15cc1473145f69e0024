I"ì<h1 id="introduction">Introduction</h1>

<p>In this tutorial I‚Äôll show you how to make a drawable and draggable paper in Godot. The result will look like this:</p>

<p><img src="/assets/images/posts/tutorial_1/result.gif" alt="Result" title="Result" /></p>

<p>This tutorial is more aimed for people with a bit of knowledge in Godot.</p>

<h1 id="project-settings">Project settings</h1>

<p>The only changes I did to the project settings were made under <em>Display/Window</em></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Width = 320
Height = 180
...
Test Width = 1280
Test Height = 720
...
Mode = 2d
Aspect = expand
</code></pre></div></div>

<h1 id="creating-the-paper-scene">Creating the paper scene</h1>

<p>We will start with the interesting part, the paper itself. We make an new scene, use <code class="language-plaintext highlighter-rouge">TextureRect</code> as our root node and name it ‚ÄúPaper‚Äù. I didn‚Äôt changed any settings in the inspector.</p>

<p>Next, we attach a script to it. I usually like to give the script a <code class="language-plaintext highlighter-rouge">class_name</code>, the name of the script itself (in our case <code class="language-plaintext highlighter-rouge">Paper</code>).
Let‚Äôs define some variables:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>class_name Paper
extends TextureRect

# Bool to check if pen is selected
var pen_selected : bool

# Color of the pen
const color : Color = Color( 0, 0, 0, 1 ) # Black

# Saves the Position if the Paper is being dragged
var drag_position : Vector2 = Vector2.ZERO

# Save the previouse Mouse position
var previous_mouse_position : Vector2 = Vector2.ZERO

# Create an Node2D for the pen when ready
onready var pen : Node2D = Node2D.new()
</code></pre></div></div>

<p>Most of them are self explanatory or by the comments, the <code class="language-plaintext highlighter-rouge">pen</code> variable, which is an <code class="language-plaintext highlighter-rouge">Node2D</code>, is used to create our ‚Äúpen‚Äù. We will call the <code class="language-plaintext highlighter-rouge">draw</code> method from this Node to do the drawing.</p>

<h1 id="creating-the-main-scene">Creating the main scene</h1>

<p>First we create the main scene. We choose as our root node a 2D scene and call it ‚ÄúMain‚Äù. After that we attach a script to it and call it also ‚ÄúMain‚Äù.</p>

<p>Here is the complete <code class="language-plaintext highlighter-rouge">Main.gd</code>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>class_name Main
extends Node2D

# Grab the Paper when ready
onready var paper : Paper = $Paper

# Bool to store if pen is selected
var pen_selected : bool = false

func _input(event) -&gt; void:

  # Bool to check if the button is just pressed (not needed if you assigned an action key)
  var just_pressed : bool = event.is_pressed() and not event.is_echo()

  # Check if the "A" button was just pressed
  if Input.is_key_pressed(KEY_A) and just_pressed:
    self.select_pen()

func select_pen() -&gt; void:
  # Function which selectes the pen

  # Negate pen_selected
  self.pen_selected = not self.pen_selected

  # Set pen_selected from the paper
  paper.set_pen_selected(self.pen_selected)
</code></pre></div></div>

<p>Next we want to create the paper.</p>

<hr />
<p><strong>Sidenote</strong></p>

<p>My folder structure looks usually like this:</p>

<h2><img src="/assets/images/posts/tutorial_1/folder_structure.png" alt="Folder Structure" /></h2>

<h1 id="creating-the-paper">Creating the paper</h1>

<p>Now we come to the interesting part,</p>
:ET